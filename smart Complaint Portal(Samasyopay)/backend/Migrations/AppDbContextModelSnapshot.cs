// <auto-generated />
using System;
using Complaint_2._0.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Complaint_2._0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Complaint_2._0.Models.Agent", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            Department = "Aadhar"
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.Citizen", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Citizens");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Main Street",
                            PhoneNumber = "9999999999"
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("CitizenId")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("ComplaintTypeId");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgentId = 2,
                            CitizenId = 1,
                            ComplaintTypeId = 1,
                            CreatedAt = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aadhar not updated",
                            Status = 0,
                            Title = "Aadhar Card Issue",
                            UpdatedAt = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AgentId = 2,
                            CitizenId = 1,
                            ComplaintTypeId = 2,
                            CreatedAt = new DateTime(2024, 1, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Name mismatch in Voter ID",
                            Status = 0,
                            Title = "Voter ID Name Mismatch",
                            UpdatedAt = new DateTime(2024, 1, 15, 10, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.ComplaintDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintDocuments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComplaintId = 1,
                            ContentType = "application/pdf",
                            Data = new byte[0],
                            FileName = "aadhar_doc.pdf",
                            Type = 0,
                            UploadedAt = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ComplaintId = 2,
                            ContentType = "application/pdf",
                            Data = new byte[0],
                            FileName = "voter_doc.pdf",
                            Type = 0,
                            UploadedAt = new DateTime(2024, 1, 15, 10, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.ComplaintType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplaintTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aadhar",
                            TypeName = "Aadhar Card Issues"
                        },
                        new
                        {
                            Id = 2,
                            Name = "VoterID",
                            TypeName = "Voter ID Issues"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BirthCertificate",
                            TypeName = "Birth Certificate Issues"
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            Name = "John Citizen",
                            PasswordHash = "$2a$11$K5Zy8Zv8Zv8Zv8Zv8Zv8ZuJ8Zv8Zv8Zv8Zv8Zv8Zv8Zv8Zv8Zv8Z",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "agent@complaint.com",
                            Name = "Agent Smith",
                            PasswordHash = "$2a$11$PUnmlFw0gnmDwgcJK6fjse1NFI.k7Eve8FHuKYFa8mb02KyE0/9yG",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin@complaint.com",
                            Name = "Admin User",
                            PasswordHash = "$2a$11$dAttqu/pCGlCvarGnFKQoO.xNE2wDPSFfuqedGpM28ZRge1ljcZRK",
                            Role = 2
                        });
                });

            modelBuilder.Entity("Complaint_2._0.Models.Agent", b =>
                {
                    b.HasOne("Complaint_2._0.Models.User", "User")
                        .WithOne("AgentProfile")
                        .HasForeignKey("Complaint_2._0.Models.Agent", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Complaint_2._0.Models.Citizen", b =>
                {
                    b.HasOne("Complaint_2._0.Models.User", "User")
                        .WithOne("CitizenProfile")
                        .HasForeignKey("Complaint_2._0.Models.Citizen", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Complaint_2._0.Models.Complaint", b =>
                {
                    b.HasOne("Complaint_2._0.Models.Agent", "Agent")
                        .WithMany("AssignedComplaints")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Complaint_2._0.Models.Citizen", "Citizen")
                        .WithMany("Complaints")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Complaint_2._0.Models.ComplaintType", "ComplaintType")
                        .WithMany("Complaints")
                        .HasForeignKey("ComplaintTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Citizen");

                    b.Navigation("ComplaintType");
                });

            modelBuilder.Entity("Complaint_2._0.Models.ComplaintDocument", b =>
                {
                    b.HasOne("Complaint_2._0.Models.Complaint", "Complaint")
                        .WithMany("ComplaintDocuments")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("Complaint_2._0.Models.Agent", b =>
                {
                    b.Navigation("AssignedComplaints");
                });

            modelBuilder.Entity("Complaint_2._0.Models.Citizen", b =>
                {
                    b.Navigation("Complaints");
                });

            modelBuilder.Entity("Complaint_2._0.Models.Complaint", b =>
                {
                    b.Navigation("ComplaintDocuments");
                });

            modelBuilder.Entity("Complaint_2._0.Models.ComplaintType", b =>
                {
                    b.Navigation("Complaints");
                });

            modelBuilder.Entity("Complaint_2._0.Models.User", b =>
                {
                    b.Navigation("AgentProfile")
                        .IsRequired();

                    b.Navigation("CitizenProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
